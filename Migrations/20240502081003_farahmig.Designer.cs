// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Urlize_back.Models;

#nullable disable

namespace Urlize_back.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240502081003_farahmig")]
    partial class farahmig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BusinessCatalogue", b =>
                {
                    b.Property<int>("businessId")
                        .HasColumnType("int");

                    b.Property<int>("catalogueId")
                        .HasColumnType("int");

                    b.HasKey("businessId", "catalogueId");

                    b.HasIndex("catalogueId");

                    b.ToTable("BusinessCatalogue");
                });

            modelBuilder.Entity("BusinessCategorie", b =>
                {
                    b.Property<int>("businessesId")
                        .HasColumnType("int");

                    b.Property<int>("categorieId")
                        .HasColumnType("int");

                    b.HasKey("businessesId", "categorieId");

                    b.HasIndex("categorieId");

                    b.ToTable("BusinessCategorie");
                });

            modelBuilder.Entity("Urlize_back.Models.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("brandDescription")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("brandDescription");

                    b.Property<string>("businessName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.Property<string>("colorPalette")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("colorPalette");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("designPref")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("designPref");

                    b.Property<string>("goal")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("goal");

                    b.Property<string>("logo_url")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("logo");

                    b.HasKey("Id");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("Urlize_back.Models.Catalogue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategorieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Catalogue");
                });

            modelBuilder.Entity("Urlize_back.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("Urlize_back.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Available")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("Available");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("Image")
                        .HasColumnType("longtext")
                        .HasColumnName("Image");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.Property<float>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price");

                    b.Property<int>("businessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("businessId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BusinessCatalogue", b =>
                {
                    b.HasOne("Urlize_back.Models.Business", null)
                        .WithMany()
                        .HasForeignKey("businessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Urlize_back.Models.Catalogue", null)
                        .WithMany()
                        .HasForeignKey("catalogueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusinessCategorie", b =>
                {
                    b.HasOne("Urlize_back.Models.Business", null)
                        .WithMany()
                        .HasForeignKey("businessesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Urlize_back.Models.Categorie", null)
                        .WithMany()
                        .HasForeignKey("categorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Urlize_back.Models.Catalogue", b =>
                {
                    b.HasOne("Urlize_back.Models.Categorie", "categorie")
                        .WithMany()
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categorie");
                });

            modelBuilder.Entity("Urlize_back.Models.Product", b =>
                {
                    b.HasOne("Urlize_back.Models.Business", "business")
                        .WithMany("product")
                        .HasForeignKey("businessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("business");
                });

            modelBuilder.Entity("Urlize_back.Models.Business", b =>
                {
                    b.Navigation("product");
                });
#pragma warning restore 612, 618
        }
    }
}
